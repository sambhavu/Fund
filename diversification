#include<cmath> 
#include<iostream>
#include<vector> 
using namespace std; 

class client{ 
 public: 
 
 double initial_investment = 100000;
 double fee_exp            = .015;
 
 double p_equity            =0;
 double p_bonds             =0; 
 double p_cash              =0; 
 double p_em                =0; 
 
 double equity              =0;
 double bonds               =0;
 double cash                =0;
 double em                =0; 
 
 
 
 double fee();
 double capital();
 
 void aggressive();
 void moderate();
 void conservative();
 
 void set_equity(double x);
 void set_bonds(double x);
 void set_cash(double x);
 void set_em(double x); 
 
 void print();
 
};

double client :: fee(){return fee_exp*initial_investment;} 

double client :: capital(){
    double capital = initial_investment - fee(); 
    return capital;
}

void client :: aggressive(){
    p_equity = .57;
    p_bonds  = .05; 
    p_cash   =  0; 
    p_em     = .38;  
    
    set_equity(p_equity);
    set_bonds(p_bonds);
    set_cash(p_cash);
    set_em(p_em);
}

void client :: moderate(){
    p_equity =  .36;
    p_bonds  =  .35; 
    p_cash   =  0.05; 
    p_em     = .24;    
    
    set_equity(p_equity);
    set_bonds(p_bonds);
    set_cash(p_cash);
    set_em(p_em);
}

void client :: conservative(){
    p_equity = .13;
    p_bonds  = .68; 
    p_cash   = .12; 
    p_em     = .07;   
    
    set_equity(p_equity);
    set_bonds(p_bonds);
    set_cash(p_cash);
    set_em(p_em);
    
}


void client :: set_equity(double x){ 
    equity = x*capital();
    
}

void client :: set_bonds(double x){
    bonds = x*capital();
}

void client :: set_cash(double x){
    cash = x*capital();   
}

void client :: set_em(double x){ 
    em = x*capital();      
}

void client:: print() {
    
    cout<<"Capital Invested: "<<capital()<<"\n";
    
    aggressive();
    cout<<"Aggressive Allocation: \n";
    cout<<"Equity: "<<equity<<"\n";
    cout<<"Bonds: "<<bonds<<"\n";
    cout<<"Emerging Markets: "<<em<<"\n";
    cout<<"Cash: "<<cash<<"\n"; 
    
    moderate();
    cout<<"Moderate Allocation: \n";
    cout<<"Equity: "<<equity<<"\n";
    cout<<"Bonds: "<<bonds<<"\n";
    cout<<"Emerging Markets: "<<em<<"\n";
    cout<<"Cash: "<<cash<<"\n"; 
    
    conservative();
    cout<<"Conservative Allocation: \n";
    cout<<"Equity: "<<equity<<"\n";
    cout<<"Bonds: "<<bonds<<"\n";
    cout<<"Emerging Markets: "<<em<<"\n";
    cout<<"Cash: "<<cash<<"\n"; 
}
    



int main(){
    
    client x;
    x.print();
    return 0;   
}
